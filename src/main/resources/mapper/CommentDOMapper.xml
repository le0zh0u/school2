<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.school.dao.CommentDOMapper">
    <resultMap id="BaseResultMap" type="com.school.domain.CommentDO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="message_id" property="messageId" jdbcType="INTEGER"/>
        <result column="critics_id" property="criticsId" jdbcType="INTEGER"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="mark_read" property="markRead" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, message_id, critics_id,content, status, type, mark_read, create_time, modify_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from school_comment
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from school_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.school.domain.CommentDO">
    insert into school_comment (id, message_id, critics_id, content,
      status, type, mark_read,
      create_time, modify_time)
    values (#{id,jdbcType=INTEGER}, #{messageId,jdbcType=INTEGER}, #{criticsId,jdbcType=INTEGER}, #{content,jdbc=VARCHAR},
      #{status,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{markRead,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.school.domain.CommentDO">
        insert into school_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="messageId != null">
                message_id,
            </if>
            <if test="criticsId != null">
                critics_id,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="markRead != null">
                mark_read,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="messageId != null">
                #{messageId,jdbcType=INTEGER},
            </if>
            <if test="criticsId != null">
                #{criticsId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="markRead != null">
                #{markRead,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.school.domain.CommentDO">
        update school_comment
        <set>
            <if test="messageId != null">
                message_id = #{messageId,jdbcType=INTEGER},
            </if>
            <if test="criticsId != null">
                critics_id = #{criticsId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="markRead != null">
                mark_read = #{markRead,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.school.domain.CommentDO">
    update school_comment
    set message_id = #{messageId,jdbcType=INTEGER},
      critics_id = #{criticsId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      mark_read = #{markRead,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="findCommentListByMessageIdList" resultType="com.school.dto.MessageCriticsDto">
        select
        c.id as id, c.message_id as messageId, c.critics_id as criticsId,c.content as content, c.status as status,
        c.type as type, c.mark_read as markRead, ai.nick_name as criticsNickName,ai.head_portrait as criticsHeadPortrait
        from school_comment c LEFT JOIN school_account_info ai ON c.critics_id = ai.id
        where status = 1 and message_id IN
        <foreach collection="messageIdList" index="index" item="messageId" open="(" close=")" separator=",">
            #{messageId}
        </foreach>
    </select>
</mapper>
