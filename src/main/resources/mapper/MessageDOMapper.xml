<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.school.dao.MessageDOMapper">
    <resultMap id="BaseResultMap" type="com.school.domain.MessageDO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="university_code" property="universityCode" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, content, type, status,university_code, create_time, modify_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from school_message
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from school_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.school.domain.MessageDO">
    insert into school_message (id, user_id, content, 
      type, status, university_code,create_time,
      modify_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{universityCode, jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.school.domain.MessageDO">
        insert into school_message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="universityCode != null">
                university_code,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="universityCode != null">
                #{universityCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.school.domain.MessageDO">
        update school_message
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="universityCode != null">
                university_code = #{universityCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.school.domain.MessageDO">
    update school_message
    set user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      university_code = #{universityCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="findMessageListByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from school_message
        where user_id = #{userId,jdbcType=INTEGER}
    </select>

    <sql id="Watched_Message_Item_Column_List">
        m.id as id, m.user_id as userId, m.content as content, m.type as type, m.status as status,
        m.university_code as universityCode, m.create_time as createTime, m.modify_time as modifyTime,
        ai.nick_name as nickName, ai.id as userId, ai.head_portrait as headPortrait

    </sql>

    <select id="findWatchMessageByMessageIdList" resultType="com.school.dto.upstream.WatchedMessageItemDto">
        select
        <include refid="Watched_Message_Item_Column_List"/>
        from school_message m LEFT JOIN school_account_info ai ON m.user_id = ai.id
        WHERE m.status = 1 and m.id in
        <foreach collection="messageIdList" item="messageId" open="(" close=")" index="index" separator=",">
            #{messageId}
        </foreach>
    </select>

    <select id="findMessageListByUniversityAndType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from school_message
        WHERE status = 1 and university_code = #{universityCode, jdbcType=VARCHAR} AND type =
        #{typeId, jdbcType=INTEGER}
    </select>

    <delete id="deleteByMessageIdAndUserId">
        delete from school_message
        where id = #{messageId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER}
    </delete>

    <update id="deleteByMessageIdAndUserId" parameterType="com.school.domain.MessageDO">
        update school_message
        set
        status = 2,
        modify_time = CURRENT_TIMESTAMP
        where id = #{messageId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER}
    </update>
</mapper>
